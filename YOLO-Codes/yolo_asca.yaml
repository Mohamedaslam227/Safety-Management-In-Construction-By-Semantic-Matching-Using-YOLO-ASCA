#YOLO_ASCA

# Parameters
nc: 99  # number of classes
scales:
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

loss:
  box: eiou  # EIoU loss for better regression
  cls: 1.0
  obj: 1.0
  anchor_t: 4.0

# Backbone with C2f Attention
backbone:
  - [-1, 1, Conv, [64, 3, 2]]  # P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # P2/4
  - [-1, 2, C2f, [128, True]]  # Add C2f block
  - [-1, 1, Conv, [256, 3, 2]]  # P3/8
  - [-1, 3, C3k2, [256, False, 0.25]]  # Retain C3k2
  - [-1, 1, Conv, [512, 3, 2]]  # P4/16
  - [-1, 3, C3k2, [512, False, 0.25]]  # Retain C3k2
  - [-1, 1, Conv, [1024, 3, 2]]  # P5/32
  - [-1, 2, C2f, [1024, True]]  # Integrate C2f at P5
  - [-1, 1, SPPF, [1024, 5]]  # SPPF module for pooling
  - [-1, 2, C2PSA, [1024]]  # Retain C2PSA

# Head with Multi-Scale Detection and C2f
head:
  # P5 processing
  - [-1, 1, Conv, [512, 1, 1]]  # Reduce channels
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Upsample
  - [[-1, 6], 1, Concat, [1]]  # Concatenate with P4
  - [-1, 2, C2f, [512]]  # Add C2f block

  # P4 processing
  - [-1, 1, Conv, [256, 1, 1]]  # Reduce channels
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Upsample
  - [[-1, 4], 1, Concat, [1]]  # Concatenate with P3
  - [-1, 2, C2f, [256]]  # Add C2f block

  # P3 processing with extended features
  - [-1, 1, Conv, [128, 1, 1]]  # Reduce channels
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Upsample
  - [[-1, 2], 1, Concat, [1]]  # Concatenate with P2
  - [-1, 2, C2f, [128]]  # Add C2f block for fine-grained features

  # Detection outputs
  - [[16, 19, 22], 1, Detect, [nc]]  # Multi-scale detection
